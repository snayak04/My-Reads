{"version":3,"sources":["BooksAPI.js","components/ShelfChanger.js","components/Book.js","components/SearchBooks.js","components/Bookshelf.js","components/AddBook.js","components/ListBooks.js","components/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ShelfChanger","_this","this","react_default","a","createElement","className","onChange","e","props","changeShelf","target","value","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","thumbnail","components_ShelfChanger","title","authors","SearchBooks","searchBook","setState","console","log","error","catch","handleOnClick","redirect","state","_this2","map","components_Book","key","Redirect","push","to","onClick","type","placeholder","Bookshelf","AddBook","from","ListBooks","reading","wantToRead","read","forEach","components_Bookshelf","components_AddBook","BooksApp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this3","Route","exact","path","render","components_ListBooks","components_SearchBooks","React","ReactDOM","BrowserRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9e74fb7.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react';\n\n class ShelfChanger  extends Component{\n     render() {\n    return(<div className=\"book-shelf-changer\">\n    <select \n        onChange={(e)=>{\n        this.props.changeShelf(this.props.book, e.target.value);\n        }}\n        value={this.props.book.shelf}>\n        {/**Glitchy here, while searching book.... */}\n        <option value=\"move\" disabled>Move to...</option>\n        <option value=\"currentlyReading\">Currently Reading</option>\n        <option value=\"wantToRead\">Want to Read</option>\n        <option value=\"read\">Read</option>\n        <option value=\"none\">None</option>\n    </select>\n</div>);\n}\n }\n\nexport default ShelfChanger;","import React, {Component} from 'react';\nimport ShelfChanger from './ShelfChanger';\n\nclass Book extends Component {\n    render() {\n    let image = ((this.props.book.imageLinks)?(this.props.book.imageLinks.thumbnail):(''));\n    const style = { \n        width: 128, \n        height: 193, \n        backgroundImage: \"url('\" +image+ \"')\"\n    }\n    return (\n        <li id={this.props.book.id}>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div className=\"book-cover\" style={style}></div>\n                    <ShelfChanger book={this.props.book} changeShelf={this.props.changeShelf}/>\n                </div>\n                <div className=\"book-title\">{this.props.book.title}</div>\n                <div className=\"book-authors\">{this.props.book.authors}</div>\n            </div>\n        </li>);\n    }\n}\n\nexport default Book;","import React, { Component} from 'react';\nimport {search} from '../BooksAPI';\nimport Book from './Book';\nimport {Redirect} from 'react-router-dom';\nclass SearchBooks extends Component{\n    searchBook = (e) =>{\n        this.setState({query: e.target.value})\n        const promises = search(e.target.value);\n        promises.then((books)=>{\n            console.log(books);\n            if(books && !books.error)\n            this.setState({books:books});\n            else\n            this.setState({books:[]});\n        }).catch(()=>{\n            console.log(\"ERROR Searching\");\n        })\n    }\n    handleOnClick = () => {\n        this.setState({redirect: true});\n      }\n    state={\n        query:\"\",\n        books:[],\n        redirect:false\n    }\n    render() {\n        \n        const books = this.state.books.map((book)=>{\n            console.log(book.shelf);\n            return <Book  changeShelf={this.props.changeShelf} book={book} key={book.id} />\n        });\n        if(this.state.redirect)\n            return <Redirect push to=\"/\" />\n        \n            return( \n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n        <button className=\"close-search\" onClick={this.handleOnClick}>Close</button>\n                <div className=\"search-books-input-wrapper\">\n                    {/*\n                        NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                        You can find these search terms here:\n                        https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                        However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                        you don't find a specific author or title. Every search is limited by search terms.\n                    */}\n                    <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={this.searchBook}/>\n                </div>\n            </div>\n            <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                {books}\n                </ol>\n            </div>\n        </div>  \n    );}\n}\n\nexport default SearchBooks;","import React, { Component } from 'react';\nimport Book from './Book';\n\nclass Bookshelf extends Component {\n\n    render(props) {\n//        {title, author, url} = props\n    const books = this.props.books.map((book)=>{\n        return <Book  changeShelf={this.props.changeShelf} book={book} key={book.id}/>\n    });\n   return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                    {books}\n                </ol>\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default Bookshelf;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\n\n\n class AddBook extends Component {\n    handleOnClick = () => {\n        this.setState({redirect: true});\n    }\n    state={\n       redirect:false\n    }\n\n     render(){\n        if(this.state.redirect)\n            return <Redirect from=\"/\" to=\"/search\"/>\n        \n        return (<div className=\"open-search\">\n            <button onClick={this.handleOnClick}>Add a book</button>\n        </div>);\n     }\n}\nexport default AddBook;","import React, { Component } from 'react';\nimport Bookshelf from './Bookshelf';\nimport AddBook from './AddBook';\n\nclass ListBooks extends Component {\n    \n    render(){\n        var state={\n            reading:[],\n            wantToRead:[],\n            read:[]\n        }\n        this.props.books.forEach((book)=>{\n            switch(book.shelf){\n                case \"currentlyReading\":\n                    state.reading.push(book);\n                    break;\n                case \"wantToRead\":\n                    state.wantToRead.push(book)\n                    break;\n                case \"read\":\n                    state.read.push(book);\n                    break;\n                default://Do nothign\n                    break;\n            }\n            });\n\n        return (\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        <Bookshelf changeShelf={this.props.changeShelf} title=\"Currently Reading\" books={state.reading}/>\n                        <Bookshelf changeShelf={this.props.changeShelf} title=\"Want to Read\" books={state.wantToRead}/>\n                        <Bookshelf changeShelf={this.props.changeShelf} title=\"Read\" books={state.read}/>\n                    </div>\n                </div>\n                <AddBook />\n            </div>\n    );\n    }\n}\n\nexport default ListBooks;","import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport '../App.css'\nimport SearchBooks from './SearchBooks';\nimport ListBooks from './ListBooks';\nimport {update, getAll} from'../BooksAPI';\nimport {  Route } from 'react-router-dom';\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n  }\n  \n  constructor(props){\n        super(props);\n        this.state={\n            books:[],\n        }\n    }\n    componentDidMount() {\n      const promise = getAll();\n      promise.then((data)=>{\n          this.setState({books:data});\n      }).catch((error)=>{\n          console.log(\"Error Occured!\");\n      })\n  };\n\n    changeShelf=(book, shelf)=>{\n      console.log(\"Clicked: \" + shelf);\n      update(book, shelf);\n      const promise = getAll();\n      promise.then((data)=>{\n        this.setState({books:data});\n      }).catch((error)=>{\n          console.log(\"Error Occured!\");\n      })\n    }\n\n  render() {\n    return (\n      <div className=\"app\">\n      <Route exact path=\"/\" render={()=> (<ListBooks  state={this.state} books={this.state.books} changeShelf={this.changeShelf}/>)}/>\n      <Route exact path=\"/search\" render={()=>(<SearchBooks changeShelf={this.changeShelf}/>)} />\n\n      {/* {<Switch>\n        <Route exact path=\"/\" component={ListBooks} />\n        <Route path=\"/search/\" component={SearchBooks} />\n      </Switch>} */}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\nimport {BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}